9.4.18
significant improvement in shader db runs ~0.2%

increase gpu fan speed
/sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0/hwmon/hwmon0# echo 200 > pwm1 #how to regain auto control?
limit gpu power
/sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0/hwmon/hwmon0# echo 55000000 > power1_cap



ib partial flush patches, 4.16.0+ kernel with just the additional kernel patch DRM3.26.0 applied

glmark2 before ~8800 fps (>.110 ms) in high speed areas, overall score <7000; after ~9200 up to 9600 fps (<0.110 ms), overall score >7000

Dirt Rally

IB/CB flush TGSI
1. run: 55/42/73
2. run: 55/43/85
3. run: 55.6/43/85

IB/CB/Meta flush TGSI
1. run: 54/42/73
2. run: 55/42/84
3. run: 55/43/85

no additional flush TGSI
1. run: 55/42/73
2. run: 55/42/88
3. run: 55/43.5/85

before: 54/37-41/71-83 TGSI

Deus Ex IB/CB flush TGSI
1. run: 19.5/8.5/29.7
2. run: 19.8/9.2/30.2
before 19.1/8.7/28.8 first run

Deus Ex IB/CB flush NIR
1. run: 19.0/9.5/29.7
2. run: 19.2/9.6/29.5
3. run: 21.3/11.4/32.1
4. run: 19.6/9.1/32.7
5. run: 19.4/8.7/29.9
before 19/9.3/28.0 first run

8.4.18
Black Mesa requires libtcmalloc-minimal4:i386
delete Black\ Mesa/bin/libstdc++.so.6
otherwise works

Deus Ex Makind Divided
still one crash ~80% through shader compilation
nir 19/9.3/28.0
tgsi 19.1/8.7/28.8

Metro 2033 Redux doesnt crash when SSAO is enabled
otherwise typically crashes on the press key screen

7.4.18
workaround for aer memories of old
$HOME/.config/unity3d/Daedalic\ Entertainment\ GmbH/AERMemoriesofOld/prefs
<pref name="Screenmanager Is Fullscreen mode" type="int">0</pref>
<pref name="Screenmanager Resolution Height" type="int">720</pref>
<pref name="Screenmanager Resolution Width" type="int">1280</pref> 
64 bit doesnt work at all

AER Memories of the old - works (with workaround)

Lara Croft GO - works

Kerbal Space Program - works

RUINER - works

4.4.18

Dead Island and Metro 2033 Redux crash before the actual game starts (menus or earlier)
apitraces cause them to crash even earlier

Bioshock, Tombraider, CAT Interstellar no problems with or without apitrace

Unigine Superposition runs with and without apitrace 1080p Extreme, hangs at the end or am I not patient enough to wait for it to finish the trace to disk?

App IDs
Dead Island 91310
War Hammer 40k: Dawn of War 3 285190
Deus Ex: Mankind divided 337000

build and install 32-bit apitrace:
cmake -H. -Bbuild32 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_GUI=FALSE -DCMAKE_SYSTEM_LIBRARY_PATH=/usr/local/lib -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32
make -C build32
sudo make install

build and install 64-bit apitrace
cmake -H. -Bbuild64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_GUI=FALSE -DCMAKE_SYSTEM_LIBRARY_PATH=/usr/local/lib
make -C build64
sudo make install

Steam Launch options
apitrace trace --output=/home/nano/deadbeaf5  %command%

Trace is in the directory of the game executable if output is not specified


Dead Island (classic)
missing dependency ? works without
http://de.archive.ubuntu.com/ubuntu/pool/main/g/glew/libglew1.13_1.13.0-2_i386.deb
sudo ln -sf /usr/lib/i386-linux-gnu/libGLEW.so.1.13.0 /usr/lib/i386-linux-gnu/libGLEW.so.1.10

3.4.18
Unigine		TGSI			NIR
Valley		776/18.5/9.7/37.1	800/19.1/10/37.4
Heaven		676/26.8/8.0/59.8	686/27.2/7.2/66.9	Artifact in top right corner for both TGSI and NIR (pointcloud of wireframe of rendered structures?)
Superposition	3138/19.6/23.4/29.8	3055/19.0/22.8/29.2

2.4.18

bindless textures have to be enable in the
preferences
file in the respective game directory
.local/share/feral-interactive

                        <value name="EnableBindlessTexture" type="integer">1</value>

Deus Ex: Mankind Divided - with bindless 18.2/7.1/28.7//17.9/8.7/26.7 without 19.8/8.2/31.5//21.8/8.8/34.7 -> faster without bindless
HITMAN - crashes with bindless before even starting benchmark
DiRT Rally without 54/37-41/71-83 with bindless 52/39/69 - faster without bindless?
Mad Max - works, no benchmark available

instead of
number.shader_test -> hash.shader_test
so that is easier to determine if shaders are the same for different developers 
and also spot duplicates

MESA_SHADER_CAPTURE_PATH


run 
fdupes ./ -rdN
in shaders directory because about half are duplicates

1.4.18

Dirt Rally doesnt care about bindless
Warhammer 40k Dawn 3 does and crashes with nir when ARB_bindless_texture is reported


compare the words used in shaders dumped with preoptir

cat nir | tr -s " " "\n" | sort | uniq -c | sort -b -n > n
cat tgsi | tr -s " " "\n" | sort | uniq -c | sort -b -n > t


Patch to disable bindless textures
From 816be20dcbede41cfd40c1a1067c0cfbe5a7b000 Mon Sep 17 00:00:00 2001
From: Benedikt Schemmer <ben@besd.de>
Date: Sun, 1 Apr 2018 13:18:02 +0200
Subject: [PATCH] Disable bindless textures with radeonsi NIR until there is
 support for them. 

Allows to build and use a debug build of mesa with
 shader-db (crashes otherwise with affected shaders)

---
 src/gallium/drivers/radeonsi/si_get.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/radeonsi/si_get.c b/src/gallium/drivers/radeonsi/si_get.c
index b567f3aa7e..4f309d0ced 100755
--- a/src/gallium/drivers/radeonsi/si_get.c
+++ b/src/gallium/drivers/radeonsi/si_get.c
@@ -176,7 +176,6 @@ static int si_get_param(struct pipe_screen *pscreen, enum pipe_cap param)
 	case PIPE_CAP_DOUBLES:
 	case PIPE_CAP_TGSI_TEX_TXF_LZ:
 	case PIPE_CAP_TGSI_TES_LAYER_VIEWPORT:
-	case PIPE_CAP_BINDLESS_TEXTURE:
 	case PIPE_CAP_QUERY_TIMESTAMP:
 	case PIPE_CAP_QUERY_TIME_ELAPSED:
 	case PIPE_CAP_NIR_SAMPLERS_AS_DEREF:
@@ -257,6 +256,11 @@ static int si_get_param(struct pipe_screen *pscreen, enum pipe_cap param)
 			return 1;
 		return 0;
 
+	case PIPE_CAP_BINDLESS_TEXTURE:
+		if (sscreen->debug_flags & DBG(NIR))
+			return 0;
+		return 1;
+
 	/* Unsupported features. */
 	case PIPE_CAP_BUFFER_SAMPLER_VIEW_RGBA_ONLY:
 	case PIPE_CAP_TGSI_FS_COORD_ORIGIN_LOWER_LEFT:
-- 
2.14.1


Not documented on the mesa website:

debug_get_flags_option: help for R600_DEBUG:
|                vs [0x0000000000000001] Print vertex shaders
|                ps [0x0000000000000002] Print pixel shaders
|                gs [0x0000000000000004] Print geometry shaders
|               tcs [0x0000000000000008] Print tessellation control shaders
|               tes [0x0000000000000010] Print tessellation evaluation shaders
|                cs [0x0000000000000020] Print compute shaders
|              noir [0x0000000000000040] Don't print the LLVM IR
|            notgsi [0x0000000000000080] Don't print the TGSI
|             noasm [0x0000000000000100] Don't print disassembled shaders
|          preoptir [0x0000000000000200] Print the LLVM IR before initial optimizations
|        unsafemath [0x0000000000000800] Enable unsafe math shader optimizations
|           sisched [0x0000000000001000] Enable LLVM SI Machine Instruction Scheduler.
|           checkir [0x0000000000002000] Enable additional sanity checks on shader IR
|               nir [0x0000000000004000] Enable experimental NIR shaders
|              mono [0x0000000000008000] Use old-style monolithic shaders compiled on demand
|      nooptvariant [0x0000000000010000] Disable compiling optimized shader variants.
|              info [0x0000000000020000] Print driver information
|               tex [0x0000000000040000] Print texture info
|           compute [0x0000000000080000] Print compute info
|                vm [0x0000000000100000] Print virtual addresses when creating resources
|          forcedma [0x0000000000200000] Use asynchronous DMA for all operations when possible.
|             nodma [0x0000000000400000] Disable asynchronous DMA
|              nowc [0x0000000000800000] Disable GTT write combining
|          check_vm [0x0000000001000000] Check VM faults and dump debug info.
|      reserve_vmid [0x0000000002000000] Force VMID reservation per context.
|     switch_on_eop [0x0000000004000000] Program WD/IA to switch on end-of-packet.
|      nooutoforder [0x0000000008000000] Disable out-of-order rasterization
|            nodpbb [0x0000000010000000] Disable DPBB.
|            nodfsm [0x0000000020000000] Disable DFSM.
|              dpbb [0x0000000040000000] Enable DPBB.
|              dfsm [0x0000000080000000] Enable DFSM.
|          nohyperz [0x0000000100000000] Disable Hyper-Z
|          norbplus [0x0000000200000000] Disable RB+.
|              no2d [0x0000000400000000] Disable 2D tiling
|          notiling [0x0000000800000000] Disable tiling
|             nodcc [0x0000001000000000] Disable DCC.
|        nodccclear [0x0000002000000000] Disable DCC fast clear.
|           nodccfb [0x0000004000000000] Disable separate DCC on the main framebuffer
|         nodccmsaa [0x0000008000000000] Disable DCC for MSAA
|           dccmsaa [0x0000010000000000] Enable DCC for MSAA
|           testdma [0x0000020000000000] Invoke SDMA tests and exit.
|     testvmfaultcp [0x0000040000000000] Invoke a CP VM fault test and exit.
|   testvmfaultsdma [0x0000080000000000] Invoke a SDMA VM fault test and exit.
| testvmfaultshader [0x0000100000000000] Invoke a shader VM fault test and exit.

useful website
https://blogs.igalia.com/apinheiro/2015/09/14/optimizing-shader-assembly-instruction-on-mesa-using-shader-db/


Really difficult to compare the shaders as the results are so different :(

R600_DEBUG=vs,ps,gs,tcs,tes,cs,preoptir,nir ./run shaders/csgo/4189.shader_test 2> 4189nir

when comparing shaders preoptir NIR seems to do a lot of unnessecary bitcasting:
  %55 = extractelement <4 x float> %54, i32 0
  %56 = extractelement <4 x float> %54, i32 1
  %57 = extractelement <4 x float> %54, i32 2
  %58 = extractelement <4 x float> %54, i32 3
  %59 = bitcast float %55 to i32
  %60 = bitcast float %56 to i32
  %61 = bitcast float %57 to i32
  %62 = bitcast float %58 to i32
  %63 = getelementptr [0 x <4 x i32>], [0 x <4 x i32>] addrspace(6)* %8, i32 0, i32 1, !amdgpu.uniform !0

and unnecessary stores
  store float 0.000000e+00, float addrspace(5)* %51
  store float undef, float addrspace(5)* %51

NIR doesnt declare float
define amdgpu_vs void @main([0 x <4 x i32>] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x <8 x i32>] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x <4 x i32>] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x <8 x i32>] addrspace(6)* inreg noalias dereferenceabl

R600_DEBUG=vs,ps,gs,tcs,tes,cs,preoptir ./run shaders/csgo/4189.shader_test 2> 4189tgsi

compared to tgsi 
  %711 = extractelement <4 x float> %710, i32 0
  %712 = extractelement <4 x float> %710, i32 1
  %713 = extractelement <4 x float> %710, i32 2
  %714 = extractelement <4 x float> %710, i32 3
  %715 = getelementptr [0 x <4 x i32>], [0 x <4 x i32>] addrspace(6)* %8, i32 0, i32 1, !amdgpu.uniform !0

  store float 0.000000e+00, float addrspace(5)* %683

define amdgpu_vs void @main([0 x <4 x i32>] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x <8 x i32>] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x float] addrspace(6)* inreg noalias dereferenceable(18446744073709551615), [0 x <8 x i32>] addrspace(6)* inreg noalias dereferenceabl

31.3.18
Collisions doesnt start - requires libphysfs and run.sh must be copied from love-10.2-amd64/bin/ to main directory
otherwise fun ;)

Penumbra Necrologue - works fine but scary

Guns of Icarus online - works

Strafe: Millenium Edition - works

Axis Game Factory 3-0 - graphics fine, rest works kind of but DLC not really

Shader-db related stuff:

Routing shader-db's run stderr to /dev/null makes no sense. 	Change README ?
No need to enable debug build for radeonsi.			Change README ?

No synchronization between shader-db's run and si-report.py: premature end cannot be detected
How about run emits Done when its done and si-report looks for that?

With a debug build of mesa -O0 and --enable-debug instead of release with -O3 only a part of the available shaders is compiled (~12%). Bug ?

Also some shaders are compiled twice with different results (both debug and non-debug build) also happens with tgsi: Bug ?

Non-debug build NIR
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 20 Code Size: 444 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 16 Code Size: 72 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0

Debug build NIR
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 20 Code Size: 444 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 16 Code Size: 72 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0

Debug build TGSI
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 20 Code Size: 456 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 16 Code Size: 76 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0

Non-debug build TGSI
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 20 Code Size: 456 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0
shaders/csgo/595.shader_test - Shader Stats: SGPRS: 16 VGPRS: 16 Code Size: 76 LDS: 0 Scratch: 0 Max Waves: 8 Spilled SGPRs: 0 Spilled VGPRs: 0 PrivMem VGPRs: 0

Also lots of these:
shaders/csgo/595.shader_test - LLVM diagnostic (remark): <unknown>:0:0: 75 instructions in function
tried debug build of mesa doesnt go away - Meaning?

30.3.18
uneven results with shader-db, it seems on the whole nir could be better than tgsi, but there are some shaders with significant regressions
see run directory for comparisons of tgsi vs nir for different versions of llvm and tgsi/nir with different llvm backends also includes complete shader db out put (around 50k shaders)
overall nir gets better with every version increase of llvm, which optimizes for code size (why not speed ?)

XCom doesnt start
Workaround: create steam_appid.txt in binaries directory and start binaries/linux/game.x86_64 directly
otherwise fine

XCom 2 works fine

X3: Albion Prelude doesnt start
Workaround start X3AP_main directly
otherwise fine

Euro Truck Simulator 2 works fine


29.3.18
Empire: Total War
Fonts in Menus are garbled independent of nir
Workaround:
gedit ~/.local/share/feral-interactive/Empire/preferences
change UsePBOSurfaces from 1 to 0
Bug ?
otherwise fine

Medieval II: Total War
Fullscreen works only if the window doesnt have focus - so unplayable
Workaround:
gedit ~/.local/share/feral-interactive/Medieval\ II\ Total\ War/preferences
change Fullscreen from 1 to 0
Bug ?
otherwise fine

Total War: Shogun 2 works

Total War: WARHAMMER requires workaround to start:
sudo ln -s /usr/lib/x86_64-linux-gnu/librtmp.so.1 /usr/lib/x86_64-linux-gnu/librtmp.so.0
more stuttering with nir (see screenshot) otherwise works fine
TGSI avg 24.2 fps, NIR avg 24.3 fps

Warhammer 40k: Dawn of War II
rendering in Warhammer 40k: Dawn of War II breaks with the commit below.
In the menu only black and white shadows appear instead of 3d figure (see screenshot). In the game no 3d objects are visible only colorful shadows.

Works fine with 17.3.7.


a0c8b49284efe736849c0a45920ad0a1bbd8d93d is the first bad commit
commit a0c8b49284efe736849c0a45920ad0a1bbd8d93d
Author: Marek Olšák <marek.olsak@amd.com>
Date:   Wed Feb 14 20:13:40 2018 +0100

    mesa: enable OpenGL 3.1 with ARB_compatibility
    
    Tested-by: Dieter Nützel <Dieter@nuetzel-hh.de>
    Reviewed-by: Brian Paul <brianp@vmware.com>

:040000 040000 e77355f4d5979f42b5e8f55dd6c6ea62cba32ff3 24f0fe1b3e5f9d1daa801a706299f0115f9d8f2d M	docs
:040000 040000 89d6cc6fe13b05f4625fb48abbb94050f0cb5c96 3b91e5c0091caf1426b09568846f8f2b3bc64803 M	src
'bisect run' erfolgreich ausgeführt

17.3.18

Talos principle benchmark llvm 5.0.1 all options ultra, resolution 1920x1080 (render and display)
TGSI avg 36.7/37.3/37.1
NIR avg 35.7/36.8/37

Talos principle benchmark llvm 7 git all options ultra, resolution 1920x1080 (render and display)
TGSI avg 37.6/38.2/38
NIR avg 36.6/37.3/37.5

7.3.18

Limiting the loop unrolling has resolved the performance problem for bioshock infinite

comparing the CPU load of TGSI and NIR it doesnt seem to be an issue
does NIR generate inefficent shaders making framerate GPU bound more often?

6.3.18

Deus Ex: when using nir crashes three times during shader generation:
	half way (harddrive is active: writes crashdump?), 3/4 (crash dump?, kills steam), 99% full system freeze

BioShock Infinite Steam Launcher Options:
R600_DEBUG=nir %command% DefaultPCBenchmarkMap.xcmap -unattended -fullscreen -noPauseOnLossOfFocus

Phorononix System Information (!! = incorrectly detected)

  PROCESSOR:          Intel Xeon E31260L @ 3.30GHz
    Core Count:       4
    Thread Count:     8
    Extensions:       SSE 4.2 + AVX
    Cache Size:       8192 KB
    Microcode:        0x29
    Scaling Driver:   intel_pstate powersave

  GRAPHICS:           MSI AMD Radeon 4096MB
!!    OpenGL:           4.5 Mesa 18.1.0-dev-ben-Mo 5. Mr 09:17:09 CET 2018 (git-b352b692d2) (LLVM 5.0.0) !! (actually oibaf for 32-bit)
    Vulkan:           1.0.49
    OpenCL:           OpenCL 1.1 Mesa 18.1.0-dev-ben-Mo 5. Mr 09:17:09 CET 2018 (git-b352b692d2)
    Display Driver:   modesetting 1.19.5
    Monitor:          BenQ G2412HD
    Screen:           1920x1080

  MOTHERBOARD:        Intel DQ67OW
    BIOS Version:     SWQ6710H.86A.0068.2017.0601.1423
    Chipset:          Intel Xeon E3-1200 Family DRAM
    Audio:            Realtek ALC888
    Network:          Intel 82579LM Gigabit Connection

  MEMORY:             8192MB

  DISK:               960GB OCZ TRION100
    File-System:      ext4
    Mount Options:    data=ordered errors=remount-ro relatime rw
    Disk Scheduler:   CFQ

  OPERATING SYSTEM:   Ubuntu 17.10
    Kernel:           4.16.0-rc4 (x86_64) 20180305
    Desktop:          GNOME Shell 3.26.2
!!    Compiler:         Clang 4.0.1-6 + LLVM 5.0.0 !! (actually ccache and gcc 7.2.0)
    Security:         KPTI + __user pointer sanitization + Full generic retpoline Protection


5.3.18

Dead Island crashes while generating shaders

The Valley - works

SpecOps the Line - works nonir 53 to 60 fps, nir 37 to 60 fps

Dying Light - works, nonir 29 to 51, nir 31 to 52 one crash during shader generation

3.3.18

Tested on Ubuntu 17.10 with mesa git of today 
(oibaf for 32 bit, mine with LLVM5.0 on 64 bit because I cant figure out how to build 32bit drivers on ubuntu :( )
Xeon 1260l and 8GB DDR3-10600 with RX460 4GB

works means no obvious visual artifacts etc.

Alien Isolation - works

Bioshock Infinite - works nonir Overall avg 45.58, min 9.81, max 104.49; nir avg 31.47 min 8.35 max 94.19

CAT Interstellar (UE4) - works

Dead Island Definitive - works

Dead Island Riptide Definitive - works

Deus Ex: Mankind Divided - works, nonir low 8.3 avg 24.2 high 37.6; nir low 1 avg 22.8 high 35.8
	but shadergeneration crashes two times: once around half the loader bar with complete system freeze and then again around the end but only exiting the application

Mad Max[vulcan beta] - works, nir seems be a bit slower except for one benchmark
	benchmark 1
	nonir	43/45/47
	nir	10/46/50
	benchmark 2
	nonir	14/37/41
	nir	24/36/40
	benchmark 3
	nonir	8/43/61
	nir	5/41/61
	benchmark 4
	nonir	9/49/78
	nir	4/47/74

Tomb Raider - TressFX doesn't work: hair flickering and is riddled with small green block artifacts, smoothing is missing; speed is the same 28.6 ish

Hitman GO (Unity) - works

Unity of Command (PyGame,SDL) - works

Talos Principle Benchmark nir 64.7 nonir 67
