# http://www.appveyor.com/doc{0}
#
# To setup AppVeyor for your own personal repositories do the following:
# - Sign up
# - Add a new project
# - Select Git and fill in the Git clone URL
# - Setup a Git hook as explained in
#   https://github.com/appveyor/webhooks#installing-git-hook
# - Check 'Settings > General > Skip branches without appveyor.yml'
# - Check 'Settings > General > Rolling builds'
# - Setup the global or project notifications to your liking
#
# Note that kicking (or restarting) a build via the web UI will not work, as it
# will fail to find appveyor.yml .  The Git hook is the most practical way to
# kick a build.
#
# See also:
# - http://help.appveyor.com/discussions/problems/2209-node-grunt-build-specify-a-project-or-solution-file-the-directory-does-not-contain-a-project-or-solution-file
# - http://help.appveyor.com/discussions/questions/1184-build-config-vs-appveyoryaml

version: '{build}'

branches:
  except:
  - /^travis.*$/

# Don't download the full Mesa history to speed up cloning.  However the clone
# depth must not be too small, otherwise builds might fail when lots of patches
# are committed in succession, because the desired commit is not found on the
# truncated history.
#
# See also:
# - https://www.appveyor.com/blog/2014/06/04/shallow-clone-for-git-repositories
clone_depth: 100

image: ubuntu
platform: Any CPU
configuration: Release


install:
- ls -al
# deb-src http://us
- sh: sudo sed -i~orig -e 's$# deb-src http://us$deb-src http://us$' /etc/apt/sources.list
- sh: sudo apt-get update
- sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
- sh: sudo apt-get build-dep mesa -y

build_script:
- sh: ./autogen.sh \
--prefix=/usr/local \
--sysconfdir=\${prefix}/etc \
--libdir=\${prefix}/lib/ \
--localstatedir=/var \
--build=x86_64-linux-gnu \
--host=x86_64-linux-gnu \
--enable-dri \
--with-dri-drivers=" nouveau i915 i965 r200 radeon swrast" \
--with-dri-driverdir=\${prefix}/lib/dri \
--with-dri-searchpath='/usr/local/lib/dri:\$${ORIGIN}/dri:/usr/lib/dri' \
--enable-osmesa \
--enable-glx-tls \
--enable-shared-glapi \
--enable-texture-float \
--enable-driglx-direct \
--enable-dri3 \
--with-platforms="x11 wayland drm" \
--enable-xa \
--enable-llvm ac_cv_path_LLVM_CONFIG=llvm-config-5.0 \
--enable-vdpau \
--enable-omx-bellagio \
--enable-va \
--enable-xvmc \
--enable-opencl \
--enable-opencl-icd \
--enable-nine \
--enable-gallium-extra-hud \
--enable-lmsensors \
--with-gallium-drivers=" nouveau svga r600 r300 i915 virgl radeonsi swrast" \
--enable-gles1 \
--enable-gles2 \
--enable-gle \
--with-vulkan-drivers=intel,radeon \
CFLAGS="-O3 -fstack-protector-strong -Wall -Wextra -Werror=format-security -fno-omit-frame-pointer" \
CPPFLAGS="-Wall -Wextra -D_FORTIFY_SOURCE=2" \
CXXFLAGS="-O3 -fstack-protector-strong -Wall -Wextra -Werror=format-security -fno-omit-frame-pointer" \
FCFLAGS="-O3 -fstack-protector-strong" \
FFLAGS="-O3 -fstack-protector-strong" \
GCJFLAGS="-O3 -fstack-protector-strong" \
LDFLAGS="-Bsymbolic-functions -z relro" \
OBJCFLAGS="-O3 -fstack-protector-strong -Wall -Wextra -Werror=format-security" \
OBJCXXFLAGS="-O3 -fstack-protector-strong -Wall -Wextra -Werror=format-security" \
CC=gcc \
CXX=g++
- sh: make
- sh: sudo make install
